/*
 * This file is generated by jOOQ.
*/
package com.csc680.orbit.database.tables.records;


import com.csc680.orbit.database.tables.Schedule;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ScheduleRecord extends UpdatableRecordImpl<ScheduleRecord> implements Record4<Integer, String, Integer, Integer> {

    private static final long serialVersionUID = -1463957002;

    /**
     * Setter for <code>orbit.schedule.ID</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>orbit.schedule.ID</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>orbit.schedule.Year</code>.
     */
    public void setYear(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>orbit.schedule.Year</code>.
     */
    public String getYear() {
        return (String) get(1);
    }

    /**
     * Setter for <code>orbit.schedule.Student_ID</code>.
     */
    public void setStudentId(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>orbit.schedule.Student_ID</code>.
     */
    public Integer getStudentId() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>orbit.schedule.Course_ID</code>.
     */
    public void setCourseId(Integer value) {
        set(3, value);
    }

    /**
     * Getter for <code>orbit.schedule.Course_ID</code>.
     */
    public Integer getCourseId() {
        return (Integer) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<Integer, String, Integer, Integer> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<Integer, String, Integer, Integer> valuesRow() {
        return (Row4) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return Schedule.SCHEDULE.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return Schedule.SCHEDULE.YEAR;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field3() {
        return Schedule.SCHEDULE.STUDENT_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field4() {
        return Schedule.SCHEDULE.COURSE_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component2() {
        return getYear();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component3() {
        return getStudentId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component4() {
        return getCourseId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getYear();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value3() {
        return getStudentId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value4() {
        return getCourseId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ScheduleRecord value1(Integer value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ScheduleRecord value2(String value) {
        setYear(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ScheduleRecord value3(Integer value) {
        setStudentId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ScheduleRecord value4(Integer value) {
        setCourseId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ScheduleRecord values(Integer value1, String value2, Integer value3, Integer value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ScheduleRecord
     */
    public ScheduleRecord() {
        super(Schedule.SCHEDULE);
    }

    /**
     * Create a detached, initialised ScheduleRecord
     */
    public ScheduleRecord(Integer id, String year, Integer studentId, Integer courseId) {
        super(Schedule.SCHEDULE);

        set(0, id);
        set(1, year);
        set(2, studentId);
        set(3, courseId);
    }
}
