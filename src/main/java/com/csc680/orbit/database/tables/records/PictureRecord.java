/*
 * This file is generated by jOOQ.
*/
package com.csc680.orbit.database.tables.records;


import com.csc680.orbit.database.tables.Picture;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PictureRecord extends UpdatableRecordImpl<PictureRecord> implements Record4<Integer, String, byte[], Integer> {

    private static final long serialVersionUID = 182200090;

    /**
     * Setter for <code>orbit.picture.ID</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>orbit.picture.ID</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>orbit.picture.Year</code>.
     */
    public void setYear(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>orbit.picture.Year</code>.
     */
    public String getYear() {
        return (String) get(1);
    }

    /**
     * Setter for <code>orbit.picture.Picture</code>.
     */
    public void setPicture(byte... value) {
        set(2, value);
    }

    /**
     * Getter for <code>orbit.picture.Picture</code>.
     */
    public byte[] getPicture() {
        return (byte[]) get(2);
    }

    /**
     * Setter for <code>orbit.picture.Student_ID</code>.
     */
    public void setStudentId(Integer value) {
        set(3, value);
    }

    /**
     * Getter for <code>orbit.picture.Student_ID</code>.
     */
    public Integer getStudentId() {
        return (Integer) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<Integer, String, byte[], Integer> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<Integer, String, byte[], Integer> valuesRow() {
        return (Row4) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return Picture.PICTURE.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return Picture.PICTURE.YEAR;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<byte[]> field3() {
        return Picture.PICTURE.PICTURE_;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field4() {
        return Picture.PICTURE.STUDENT_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component2() {
        return getYear();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public byte[] component3() {
        return getPicture();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component4() {
        return getStudentId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getYear();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public byte[] value3() {
        return getPicture();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value4() {
        return getStudentId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PictureRecord value1(Integer value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PictureRecord value2(String value) {
        setYear(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PictureRecord value3(byte... value) {
        setPicture(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PictureRecord value4(Integer value) {
        setStudentId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PictureRecord values(Integer value1, String value2, byte[] value3, Integer value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached PictureRecord
     */
    public PictureRecord() {
        super(Picture.PICTURE);
    }

    /**
     * Create a detached, initialised PictureRecord
     */
    public PictureRecord(Integer id, String year, byte[] picture, Integer studentId) {
        super(Picture.PICTURE);

        set(0, id);
        set(1, year);
        set(2, picture);
        set(3, studentId);
    }
}
