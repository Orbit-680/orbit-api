/*
 * This file is generated by jOOQ.
*/
package com.csc680.orbit.database.tables.records;


import com.csc680.orbit.database.tables.Assignment;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AssignmentRecord extends UpdatableRecordImpl<AssignmentRecord> implements Record7<Integer, String, String, String, String, Integer, String> {

    private static final long serialVersionUID = 898005242;

    /**
     * Setter for <code>orbit.assignment.ID</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>orbit.assignment.ID</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>orbit.assignment.Year</code>.
     */
    public void setYear(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>orbit.assignment.Year</code>.
     */
    public String getYear() {
        return (String) get(1);
    }

    /**
     * Setter for <code>orbit.assignment.Name</code>.
     */
    public void setName(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>orbit.assignment.Name</code>.
     */
    public String getName() {
        return (String) get(2);
    }

    /**
     * Setter for <code>orbit.assignment.Type</code>.
     */
    public void setType(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>orbit.assignment.Type</code>.
     */
    public String getType() {
        return (String) get(3);
    }

    /**
     * Setter for <code>orbit.assignment.Max_Points</code>.
     */
    public void setMaxPoints(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>orbit.assignment.Max_Points</code>.
     */
    public String getMaxPoints() {
        return (String) get(4);
    }

    /**
     * Setter for <code>orbit.assignment.Course_ID</code>.
     */
    public void setCourseId(Integer value) {
        set(5, value);
    }

    /**
     * Getter for <code>orbit.assignment.Course_ID</code>.
     */
    public Integer getCourseId() {
        return (Integer) get(5);
    }

    /**
     * Setter for <code>orbit.assignment.Description</code>.
     */
    public void setDescription(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>orbit.assignment.Description</code>.
     */
    public String getDescription() {
        return (String) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row7<Integer, String, String, String, String, Integer, String> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row7<Integer, String, String, String, String, Integer, String> valuesRow() {
        return (Row7) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return Assignment.ASSIGNMENT.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return Assignment.ASSIGNMENT.YEAR;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return Assignment.ASSIGNMENT.NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return Assignment.ASSIGNMENT.TYPE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field5() {
        return Assignment.ASSIGNMENT.MAX_POINTS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field6() {
        return Assignment.ASSIGNMENT.COURSE_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field7() {
        return Assignment.ASSIGNMENT.DESCRIPTION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component2() {
        return getYear();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component3() {
        return getName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component4() {
        return getType();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component5() {
        return getMaxPoints();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component6() {
        return getCourseId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component7() {
        return getDescription();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getYear();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getType();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value5() {
        return getMaxPoints();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value6() {
        return getCourseId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value7() {
        return getDescription();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AssignmentRecord value1(Integer value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AssignmentRecord value2(String value) {
        setYear(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AssignmentRecord value3(String value) {
        setName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AssignmentRecord value4(String value) {
        setType(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AssignmentRecord value5(String value) {
        setMaxPoints(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AssignmentRecord value6(Integer value) {
        setCourseId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AssignmentRecord value7(String value) {
        setDescription(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AssignmentRecord values(Integer value1, String value2, String value3, String value4, String value5, Integer value6, String value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached AssignmentRecord
     */
    public AssignmentRecord() {
        super(Assignment.ASSIGNMENT);
    }

    /**
     * Create a detached, initialised AssignmentRecord
     */
    public AssignmentRecord(Integer id, String year, String name, String type, String maxPoints, Integer courseId, String description) {
        super(Assignment.ASSIGNMENT);

        set(0, id);
        set(1, year);
        set(2, name);
        set(3, type);
        set(4, maxPoints);
        set(5, courseId);
        set(6, description);
    }
}
